{"version":3,"file":"static/js/711.0921e711.chunk.js","mappings":"kQAGaA,EAAgBC,EAAAA,GAAAA,IAAH,kMAWbC,GAAUD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,gFAMPG,EAAaH,EAAAA,GAAAA,MAAJ,sGAOTI,GAASJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2C,sCCXbM,EAAgBC,EAAAA,KAAaC,MAAM,CACvCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,2BACjDC,OAAQL,EAAAA,KACLI,SAAS,2BACTE,QANH,0GAMwB,6BACrBH,IAAI,GAAI,cACRI,IAAI,GAAI,eAEAC,EAAiB,WAC5B,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACrB,EAAD,WACE,SAAC,KAAD,CACEsB,cAAe,CACbZ,KAAM,GACNG,OAAQ,IAEVU,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAQC,GACjB,OAAIT,EAASU,KAAI,qBAAGjB,IAAH,IAAoBkB,SAASH,EAAOf,MAC5CmB,IAAAA,OAAAA,QAAA,UACFJ,EAAOf,KADL,6BAIPO,EAASU,KAAI,qBAAGd,MAAH,IAAwBe,SAASH,EAAOZ,QAE9CgB,IAAAA,OAAAA,QAAA,sBACUJ,EAAOZ,OADjB,8BAITO,GAASU,EAAAA,EAAAA,IAAWL,SACpBC,EAAQK,YACT,EApBH,UAsBE,UAAC7B,EAAD,YACE,UAACE,EAAD,YACE,iCACA,SAAC,KAAD,CAAOM,KAAK,UACZ,SAACL,EAAD,CAAQK,KAAK,OAAOsB,UAAU,aAEhC,UAAC5B,EAAD,YACE,mCACA,SAAC,KAAD,CAAOM,KAAK,SAASuB,KAAK,SAC1B,SAAC5B,EAAD,CAAQK,KAAK,SAASsB,UAAU,aAElC,mBAAQC,KAAK,SAAb,+BAKT,ECjEYC,EAAUjC,EAAAA,GAAAA,GAAH,yHCGPkC,EAAkB,WAC7B,IAAMC,GAAkBlB,EAAAA,EAAAA,IAAYmB,EAAAA,IAC9BjB,GAAWC,EAAAA,EAAAA,MAEjB,OAAOe,EAAgBT,KAAI,YAA2B,IAAxBjB,EAAuB,EAAvBA,KAAMG,EAAiB,EAAjBA,OAAQyB,EAAS,EAATA,GAC1C,OACE,UAACJ,EAAD,YACE,uBAAIxB,KACJ,uBAAIG,KACJ,mBAAQoB,KAAK,SAASM,QAAS,kBAAMnB,GAASoB,EAAAA,EAAAA,IAAcF,GAA7B,EAA/B,sBAHYA,EAQjB,GACF,EClBYG,EAAuBxC,EAAAA,GAAAA,GAAH,6CCCpByC,EAAc,WACzB,OACE,SAACD,EAAD,WACE,SAACN,EAAD,KAGL,ECPYQ,EAAS1C,EAAAA,GAAAA,MAAH,+CCEN2C,EAAoB,WAC/B,IAAMC,GAAS3B,EAAAA,EAAAA,IAAY4B,EAAAA,IACrB1B,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,SAACsB,EAAD,CACEI,MAAOF,EACPZ,KAAK,OACLe,SAAU,SAAAC,GACR7B,GAAS8B,EAAAA,EAAAA,IAAcD,EAAEE,OAAOJ,MAAMK,cAAcC,QACrD,EACDC,YAAY,kBAInB,ECjBYC,EAAYtD,EAAAA,GAAAA,EAAH,0FCATuD,EAAa,WACtB,OAAO,SAACD,EAAD,mEACV,E,UCSc,SAASE,IACtB,IAAMxC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBuC,GAAUxC,EAAAA,EAAAA,IAAYyC,EAAAA,IACtBC,GAAQ1C,EAAAA,EAAAA,IAAY2C,EAAAA,IACpBzC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAyC,EAAAA,EAAAA,YAAU,WACR1C,GAAS2C,EAAAA,EAAAA,MACV,GAAE,CAAC3C,KAGF,4BACE,uCACA,SAACJ,EAAD,KACA,qCAEC4C,GACC,qEACEF,GACF,wCACsB,IAApBzC,EAAS+C,QACX,SAACR,EAAD,KAEA,iCACE,SAACZ,EAAD,KACA,SAACF,EAAD,SAKT,C","sources":["components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactListFilter/ContactListFilter.styled.jsx","components/ContactListFilter/ContactListFilter.jsx","components/DefaultMsg/DefaultMsg.styled.jsx","components/DefaultMsg/DefaultMsg.jsx","pages/PhoneBook.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport {Form,ErrorMessage } from 'formik';\n\nexport const FormContainer = styled.div`\nborder: 1px solid #008B8B;\nborder-radius: 5px;\nwidth: 250px;\ndisplay: flex;\njustify-content: center;\npadding-bottom: 10px;\nmargin-bottom: 10px;\nmargin-top: 10px;\n`\n\nexport const AddForm = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nwidth: 200px;\n`\n\nexport const FormLable  = styled.label`\n    display: flex;\nflex-direction: column;\nmargin-bottom: 20px;\ngap: 5px;\n`\n\nexport const ErrMsg = styled(ErrorMessage)`\n    color: brown;\n`","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport {\n  AddForm,\n  ErrMsg,\n  FormContainer,\n  FormLable,\n} from './AddContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSlice';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too short!').required('This field is required!'),\n  number: Yup.string()\n    .required('This field is required!')\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .min(10, 'Too short!')\n    .max(10, 'Too long!'),\n});\nexport const AddContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={ContactSchema}\n        onSubmit={(values, actions) => {\n          if (contacts.map(({ name }) => name).includes(values.name)) {\n            return Notiflix.Notify.failure(\n              `${values.name} is already in contacts.`\n            );\n          } else if (\n            contacts.map(({ number }) => number).includes(values.number)\n          ) {\n            return Notiflix.Notify.failure(\n              `This number ${values.number} is already in contacts.`\n            );\n          }\n          dispatch(addContact(values));\n          actions.resetForm();\n        }}\n      >\n        <AddForm>\n          <FormLable>\n            <p>Name</p>\n            <Field name=\"name\" />\n            <ErrMsg name=\"name\" component=\"span\" />\n          </FormLable>\n          <FormLable>\n            <p>Number</p>\n            <Field name=\"number\" type=\"tel\" />\n            <ErrMsg name=\"number\" component=\"span\" />\n          </FormLable>\n          <button type=\"submit\">Add contact</button>\n        </AddForm>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Contact = styled.li`\n    display: flex;\n    gap: 15px;\n    &:not(:last-child){\n        margin-bottom:10px;\n    }\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from './ContactListItem.styled';\nimport { getVisibleContacts } from 'redux/contacts/contactsSlice';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport const ContactListItem = () => {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return visibleContacts.map(({ name, number, id }) => {\n    return (\n      <Contact key={id}>\n        <p>{name}</p>\n        <p>{number}</p>\n        <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </button>\n      </Contact>\n    );\n  });\n};\n","import styled from 'styled-components';\n\nexport const ContactListContainer = styled.ul`\n  margin-top: 10px;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ContactListContainer } from './ContactList.styled';\n\nexport const ContactList = () => {\n  return (\n    <ContactListContainer>\n      <ContactListItem />\n    </ContactListContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Filter = styled.input`\n    margin-top: 10px;\n`","import { useDispatch, useSelector } from 'react-redux';\nimport { Filter } from './ContactListFilter.styled';\nimport { changeFilters, selectFilter } from 'redux/contacts/contactsSlice';\n\nexport const ContactListFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <Filter\n        value={filter}\n        type=\"text\"\n        onChange={e => {\n          dispatch(changeFilters(e.target.value.toLowerCase().trim()));\n        }}\n        placeholder=\"ðŸ”Ž\"\n      />\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ErrMsgTag = styled.p`\n    font-size: 20px;\n    margin-top: 20px;\n    color: #008B8B;\n`","import { ErrMsgTag } from \"./DefaultMsg.styled\"\n\nexport const DefaultMsg = () => {\n    return <ErrMsgTag>You haven't any contacts in your list. Add first one!</ErrMsgTag>\n}","import { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactListFilter } from 'components/ContactListFilter/ContactListFilter';\nimport { DefaultMsg } from 'components/DefaultMsg/DefaultMsg';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectErr,\n  selectLoading,\n} from 'redux/contacts/contactsSlice';\nimport { getAllContacts } from 'redux/contacts/contactsOperations';\n\nexport default function PhoneBook() {\n  const contacts = useSelector(selectContacts);\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectErr);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <AddContactForm />\n      <h2>Contacts</h2>\n\n      {error ? (\n        <div>Something went wrong...Try reload page!</div>\n      ) : loading ? (\n        <div>Loading...</div>\n      ) : contacts.length === 0 ? (\n        <DefaultMsg />\n      ) : (\n        <>\n          <ContactListFilter />\n          <ContactList />\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["FormContainer","styled","AddForm","Form","FormLable","ErrMsg","ErrorMessage","ContactSchema","Yup","shape","name","min","required","number","matches","max","AddContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","map","includes","Notiflix","addContact","resetForm","component","type","Contact","ContactListItem","visibleContacts","getVisibleContacts","id","onClick","deleteContact","ContactListContainer","ContactList","Filter","ContactListFilter","filter","selectFilter","value","onChange","e","changeFilters","target","toLowerCase","trim","placeholder","ErrMsgTag","DefaultMsg","PhoneBook","loading","selectLoading","error","selectErr","useEffect","getAllContacts","length"],"sourceRoot":""}